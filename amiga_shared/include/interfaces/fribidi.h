#ifndef FRIBIDI_INTERFACE_DEF_H
#define FRIBIDI_INTERFACE_DEF_H

/*
** This file was machine generated by idltool.py 54.8.
** Do not edit.
*/

#include <exec/types.h>
#include <exec/exec.h>
#include <exec/interfaces.h>

#include <fribidi.h>

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct FriBidiIFace
{
	struct InterfaceData Data;

	uint32 APICALL (*Obtain)(struct FriBidiIFace *Self);
	uint32 APICALL (*Release)(struct FriBidiIFace *Self);
	APTR Expunge_UNIMPLEMENTED;
	APTR Clone_UNIMPLEMENTED;
	FriBidiJoiningType APICALL (*fribidi_get_joining_type)(struct FriBidiIFace *Self, FriBidiChar ch);
	void APICALL (*fribidi_get_joining_types)(struct FriBidiIFace *Self, const FriBidiChar * str, const FriBidiStrIndex len, FriBidiJoiningType * jtypes);
	const char * APICALL (*fribidi_get_joining_type_name)(struct FriBidiIFace *Self, FriBidiJoiningType j);
	void APICALL (*fribidi_shape_arabic)(struct FriBidiIFace *Self, FriBidiFlags flags, const FriBidiLevel * embedding_levels, const FriBidiStrIndex len, FriBidiArabicProp * ar_props, FriBidiChar * str);
	FriBidiParType APICALL (*fribidi_get_par_direction)(struct FriBidiIFace *Self, const FriBidiCharType * bidi_types, const FriBidiStrIndex len);
	FriBidiLevel APICALL (*fribidi_get_par_embedding_levels_ex)(struct FriBidiIFace *Self, const FriBidiCharType * bidi_types, const FriBidiBracketType * bracket_types, const FriBidiStrIndex len, FriBidiParType * pbase_dir, FriBidiLevel * embedding_levels);
	FriBidiLevel APICALL (*fribidi_reorder_line)(struct FriBidiIFace *Self, FriBidiFlags flags, const FriBidiCharType * bidi_types, const FriBidiStrIndex len, const FriBidiStrIndex off, const FriBidiParType base_dir, FriBidiLevel * embedding_levels, FriBidiChar * visual_str, FriBidiStrIndex * map);
	FriBidiBracketType APICALL (*fribidi_get_bracket)(struct FriBidiIFace *Self, FriBidiChar ch);
	void APICALL (*fribidi_get_bracket_types)(struct FriBidiIFace *Self, const FriBidiChar * str, const FriBidiStrIndex len, const FriBidiCharType * types, FriBidiBracketType * btypes);
	FriBidiStrIndex APICALL (*fribidi_charset_to_unicode)(struct FriBidiIFace *Self, FriBidiCharSet char_set, const char * s, FriBidiStrIndex len, FriBidiChar * us);
	FriBidiStrIndex APICALL (*fribidi_unicode_to_charset)(struct FriBidiIFace *Self, FriBidiCharSet char_set, const FriBidiChar * us, FriBidiStrIndex len, char * s);
	FriBidiCharSet APICALL (*fribidi_parse_charset)(struct FriBidiIFace *Self, const char * s);
	const char * APICALL (*fribidi_char_set_name)(struct FriBidiIFace *Self, FriBidiCharSet char_set);
	const char * APICALL (*fribidi_char_set_title)(struct FriBidiIFace *Self, FriBidiCharSet char_set);
	const char * APICALL (*fribidi_char_set_desc)(struct FriBidiIFace *Self, FriBidiCharSet char_set);
	int APICALL (*fribidi_debug_status)(struct FriBidiIFace *Self);
	int APICALL (*fribidi_set_debug)(struct FriBidiIFace *Self, int state);
	void APICALL (*fribidi_join_arabic)(struct FriBidiIFace *Self, const FriBidiCharType * bidi_types, const FriBidiStrIndex len, const FriBidiLevel * embedding_levels, FriBidiArabicProp * ar_props);
	fribidi_boolean APICALL (*fribidi_get_mirror_char)(struct FriBidiIFace *Self, FriBidiChar ch, FriBidiChar * mirrored_ch);
	void APICALL (*fribidi_shape_mirroring)(struct FriBidiIFace *Self, const FriBidiLevel * embedding_levels, const FriBidiStrIndex len, FriBidiChar * str);
	void APICALL (*fribidi_shape)(struct FriBidiIFace *Self, FriBidiFlags flags, const FriBidiLevel * embedding_levels, const FriBidiStrIndex len, FriBidiArabicProp * ar_props, FriBidiChar * str);
	FriBidiStrIndex APICALL (*fribidi_remove_bidi_marks)(struct FriBidiIFace *Self, FriBidiChar * str, const FriBidiStrIndex len, FriBidiStrIndex * positions_to_this, FriBidiStrIndex * position_from_this_list, FriBidiLevel * embedding_levels);
	FriBidiLevel APICALL (*fribidi_log2vis)(struct FriBidiIFace *Self, const FriBidiChar * str, const FriBidiStrIndex len, FriBidiParType * pbase_dir, FriBidiChar * visual_str, FriBidiStrIndex * positions_L_to_V, FriBidiStrIndex * positions_V_to_L, FriBidiLevel * embedding_levels);
	FriBidiCharType APICALL (*fribidi_get_bidi_type)(struct FriBidiIFace *Self, FriBidiChar ch);
	void APICALL (*fribidi_get_bidi_types)(struct FriBidiIFace *Self, const FriBidiChar * str, const FriBidiStrIndex len, FriBidiCharType * btypes);
	const char * APICALL (*fribidi_get_bidi_type_name)(struct FriBidiIFace *Self, FriBidiCharType t);
	fribidi_boolean APICALL (*fribidi_mirroring_status)(struct FriBidiIFace *Self);
	fribidi_boolean APICALL (*fribidi_set_mirroring)(struct FriBidiIFace *Self, fribidi_boolean state);
	fribidi_boolean APICALL (*fribidi_reorder_nsm_status)(struct FriBidiIFace *Self);
	fribidi_boolean APICALL (*fribidi_set_reorder_nsm)(struct FriBidiIFace *Self, fribidi_boolean state);
	FriBidiLevel APICALL (*fribidi_log2vis_get_embedding_levels)(struct FriBidiIFace *Self, const FriBidiCharType * bidi_types, const FriBidiStrIndex len, FriBidiParType * pbase_dir, FriBidiLevel * embedding_levels);
	FriBidiCharType APICALL (*fribidi_get_type)(struct FriBidiIFace *Self, FriBidiChar ch);
	FriBidiCharType APICALL (*fribidi_get_type_internal)(struct FriBidiIFace *Self, FriBidiChar ch);
	FriBidiLevel APICALL (*fribidi_get_par_embedding_levels)(struct FriBidiIFace *Self, const FriBidiCharType * bidi_types, const FriBidiStrIndex len, FriBidiParType * pbase_dir, FriBidiLevel * embedding_levels);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* FRIBIDI_INTERFACE_DEF_H */
